LOCAL blockCount := 0;
LOCAL freeHead   := 0;
LOCAL nextPtr    := { };

ppl_forge_allocate()
BEGIN
    LOCAL pos;

    IF freeHead <> 0 THEN
        pos       := freeHead;
        freeHead  := nextPtr[freeHead];
    ELSE
        blockCount      := blockCount + 1;
        pos             := blockCount;

        nextPtr[pos]    := 0;
    END;

    RETURN pos;
END;

ppl_forge_free(P)
BEGIN
    IF P >= 1 AND P <= blockCount THEN
        nextPtr[P]   := freeHead;
        freeHead     := P;
    END;
END;

// 示例测试函数
testFnc(X)
BEGIN
  // 模拟写数据到块 X
  nextPtr[X] := 5;
END;

// 基准测试：重复分配、写入、释放
bm_1()
BEGIN
  LOCAL t1, t2, i, ptr, ptr2;
  t1 := TICKS();

  FOR i FROM 1 TO 1000 DO
    ptr  := ppl_forge_allocate();
    ptr2 := ppl_forge_allocate();

    // 模拟对块的写入
    nextPtr[ptr] := 3;
    testFnc(ptr);
    testFnc(ptr2);

    // 释放
    ppl_forge_free(ptr);
    ppl_forge_free(ptr2);
  END;

  t2 := TICKS();
  PRINT("Elapsed ms: " + STRING(t2 - t1));
END;

bm_2()
BEGIN
    LOCAL t1 = TICKS();
    LOCAL i;
    FOR i FROM 1 TO 1000 DO
        LOCAL v;
        LOCAL v2;

        v := 3;

        v := 5;
        v2 := 5;
    END;
    LOCAL t2 = TICKS();

    PRINT(t2 - t1);
END;

EXPORT test()
BEGIN
    PRINT();
    PRINT("Testing start...");

    LOCAL i := 0;

    FOR i FROM 1 TO 100 DO
        bm_1();
    END;
    PRINT("-------------------------------------");
    FOR i FROM 1 TO 100 DO
        bm_2();
    END;

    PRINT("Testing end");

    RETURN 0;
END;